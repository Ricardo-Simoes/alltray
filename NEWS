News for 0.7.5dev
=================

THIS IS A DEVELOPMENT RELEASE!  IT IS NOT INTENDED TO BE GENERALLY
USED.  IT IS FOR TESTERS AND DEVELOPERS ONLY, AND NOT ALL OF THE
FUNCTIONALITY IS CURRENTLY PRESENT.

  * AllTray has some new requirements at build-time and at run-time.
    Please see the REQUIREMENTS file for more information.

  * AllTray has gained the -C (--enable-ctt) command line option.
    This command line option tells AllTray to enable Close-to-Tray
    support.  Currently, Close-to-Tray support is not enabled by
    default.  CTT support does not yet work with GNOME Terminal.

  * AllTray has a new binary, "alltray-ctt-helper" that is installed
    with AllTray.  This binary provides the close-to-tray support.  It
    is a C program that communicates directly with AllTray and the X11
    window system.

    The alltray-ctt-helper program requires the X11 SHAPE extension to
    work properly.  This should be pretty universally available, but
    if you encounter an X11 system that you want to use AllTray's CTT
    support on that does not have the X11 SHAPE extension, please file
    a bug on Launchpad.

  * Fixes to the man page have been made.

  * This release does not support hotkeys, but that will be coming in
    an 0.7.6dev release that should be coming within the next month or
    two (but please, don't hold your breath: my life is just starting
    to return to a level of sane that enables me to start working on
    FOSS again).

  * This release does not support the Ayatana Application Indicators,
    which is the Ubuntu answer to the "problem" of the system tray.
    There are two possible fixes for this: either they will fix
    Ayatana to include System Tray support, or AllTray will gain
    support for Ayatana in some manner.

  * A few minor bugs in AllTray have been fixed.


News for 0.7.4dev
=================

THIS IS A DEVELOPMENT SNAPSHOT!  IT IS NOT INTENDED TO BE GENERALLY
USED.  IT IS FOR TESTERS AND DEVELOPERS ONLY, AND NOT ALL OF THE
FUNCTIONALITY IS CURRENTLY PRESENT.

  * AllTray has gained the -H (--hide) command line option.  This
    command line option tells AllTray that you want to hide the
    application after spawning it or attaching to it.  This was
    default behavior for 0.70 and prior and did not exist at all in
    0.7.0dev through 0.7.3dev releases.

  * i18n support has been added to AllTray; it is now translatable.
    If you would like to contribute translations, you can do so at
    https://translations.launchpad.net/alltray -- all you need is an
    account at Launchpad and knowledge of English and the language you
    are translating into.  It is already able to speak (at least in
    part) several different languages.

  * A number of bugs (both within Launchpad and not) have been fixed
    since 0.7.3dev.  AllTray should now work on more window managers,
    and more consistently and correctly.  There may be issues with
    more esoteric window managers and/or window managers that I have
    never heard of or installed.  Please file bugs if any are found.

  * This release does NOT have support for close-to-tray.  I am sorry.
    I have been trying to figure out how to implement that in a clean,
    consistent manner that will “just work” with all known
    standards-compliant window managers and desktop environments and
    various combinations thereof, or at the very least, all of those
    that I can readily test with.

    I would very gladly accept help on this.  It needs to be
    implemented in a very low-level (X11) way.  Look at
    http://alltray.trausch.us/wiki/Close_To_Tray for what it needs to
    do, if you are interested in helping.

  * For other current build-time and run-time requirements, please see
    the REQUIREMENTS file.

News for 0.7.3dev
=================

THIS IS A DEVELOPMENT SHAPSHOT!  IT IS NOT INTENDED TO BE GENERALLY
USED.  IT IS FOR TESTERS AND DEVELOPERS ONLY, AND NOT ALL OF THE
FUNCTIONALITY IS CURRENTLY PRESENT.

  * Requires Vala > 0.7.3 (from git master on May 31, 2009, git commit
    7f2fe1b2, at the earliest) to build from the bzr branch which does
    not have the .c files already generated.  If you are building from
    a release tarball, you do not need Vala installed on your system
    unless you modify the *.vala source files (and then you will need
    Vala to regenerate the *.c files).  See REQUIREMENTS for more info.

  * AllTray can now attach to processes again.  This is done
    differently than in the old releases (0.69, 0.70 and prior) of
    AllTray.  Instead of “click mode”, AllTray can now attach to
    applications in two ways (so it is more appropriate to call it
    “attach mode”).  To use this, run “alltray -a”, which will present
    a dialog and let you click on a window to attach to that window’s
    application, or “alltray -p XXX” (where XXX is the target
    application’s process ID) to attach to an application by is
    process ID number.  This functionality should work on all systems
    which properly implement POSIX.

  * AllTray still does not intercept the “close” button to dock
    individual windows back to the tray.  This is planned for
    0.7.4dev.

  * Bugs fixed:  315707, 356516, 357468, 368274, 382083, 382548,
    probably more that I forgot to explicitly mark as being fixed
    in this cycle, but have been fixed in Launchpad.  In particular,
    AllTray can now dock OpenOffice.org and KDE application software
    again.

News for 0.7.2dev
=================

THIS IS A DEVELOPMENT SHAPSHOT!  IT IS NOT INTENDED TO BE GENERALLY
USED.  IT IS FOR TESTERS AND DEVELOPERS ONLY, AND NOT ALL OF THE
FUNCTIONALITY IS CURRENTLY PRESENT.

I was an idiot when I released 0.7.1dev, and somehow managed to not
merge it 100% correctly.  This release is what 0.7.1dev should have
been.  Sorry!

News for 0.7.1dev
=================

THIS IS A DEVELOPMENT SHAPSHOT!  IT IS NOT INTENDED TO BE GENERALLY
USED.  IT IS FOR TESTERS AND DEVELOPERS ONLY, AND NOT ALL OF THE
FUNCTIONALITY IS CURRENTLY PRESENT.

It works (mostly)!  Much has to be worked out yet:
      
  * oocalc and friends don't work right.  This is probably because
    their real PID is different from what g_spawn_async() returns, and
    we currently depend on _NET_WM_PID to feed into libwnck to be able
    to get the windows for the process.
      
    This applies to _anything_ whose real PID is going to be different
    from what g_spawn_async() returns.  Obviously, we need to be a bit
    more careful about how to determine what is what; perhaps tracking
    our child's children processes and scanning for windows that are
    owned by them would work as a general-purpose thing, and we can
    stop looking with the first child's window we find.

  * Along the same lines as the previous flaw, software that is
    non-conformant with current standards and specifications for
    interaction on the X Window System currently are not handled by
    AllTray.  This includes “xeyes”, and any other application that
    does not set _NET_WM_PID in its window(s).
      
  * The tool-tip on the icon needs to display good info.  Being that
    we are working in an application-centric way as opposed to a
    window-centric way, it'll be different than before.  But that is
    good.
      
  * There is no right-click menu on the icon yet.  It is planned, and
    it will be more featureful than ever before, enabling not only all
    windows to be docked, but just one particular window as well.
      
  * It DOES NOT intercept the close ("X") button on the window.  I
    have to find a clean way to do this.  It is on the list before
    0.8.0 since this is a feature which people _expect_ to have
    (rightfully so).

  * This release does not have session management support.  Session
    management support is on the list of things for 0.8.0, so it'll be
    coming to an 0.7.x release for testing at some point (hopefully
    soon).
      
  * THIS HANDLES MULTIPLE WINDOWS!  FINALLY!  YES!  This is excellent.
    You can truly dock an _APPLICATION_ now; not just one window.
    Tested with gnome-terminal and Firefox 3.0 and 3.5-b4.  :)

  * This release of AllTray has only been tested under GNOME 2.26, and
    only with the Metacity and Compiz window managers.  Information on
    how well it works on XFCE would be nice.

  * This release of AllTray is pretty well dependent on GTK.  It also
    requires libwnck.  This may be the way it is, since I hear tell
    that KDocker is great and it integrates well into the KDE
    environment.  It's tested to work on Ubuntu 9.04, the Jaunty
    Jackalope.  Successful reports of this development release of
    AllTray working on other systems would be greatly appreciated.

  * The development snapshot only requires a C99 compiler (for
    example, GNU GCC's C compiler, with the -gnu99 option).  It has
    only been tested with gcc 4.3.3; but it should compile on any GNU
    GCC version that implements -gnu99.

  * IF YOU ARE BUILDING FROM TRUNK, you will require the Vala
    compiler, 0.6.0 installed.  The Vala sources and build system
    aren't yet compatible with 0.7.0.  This means that if your
    operating system doesn't contain a new enough Vala compiler (or
    too new of a Vala compiler), you will want to use the release or
    snapshot tarballs, which do not require Vala to be built.

  * VPATH builds are not (yet) supported; this means that 'make
    distcheck' will always fail.  If you can fix that, please
    do---I’ve not yet been able to figure it out.

If you have issues with this release, please report them:

  https://bugs.launchpad.net/alltray/+filebug

Please see:

  https://answers.edge.launchpad.net/alltray/+faq/318

Which contains a list of the minimum necessary information for a bug
report to be useful.

January, 2009
=============

New year, new maintainer, and massive changes to the source tree.

Stay tuned.

     --- Michael B. Trausch <mike@trausch.us> (12-Jan-2009)
