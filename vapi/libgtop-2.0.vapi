/* libgtop-2.0.vapi generated by vapigen, do not modify. */

[CCode (cprefix = "", lower_case_cprefix = "glibtop_")]
namespace Glibtop {
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop {
		public uint error_method;
		public uint features;
		public uint flags;
		[CCode (array_length = false)]
		public weak int[] input;
		public uint method;
		public weak string name;
		public int ncpu;
		public uint os_version_code;
		[CCode (array_length = false)]
		public weak int[] output;
		public int pid;
		public int real_ncpu;
		public weak Glibtop.glibtop_sysdeps required;
		public weak string server_command;
		public weak string server_host;
		public uint server_port;
		public weak string server_rsh;
		public weak string server_user;
		public int socket;
		public weak Glibtop.glibtop_sysdeps sysdeps;
		[CCode (cname = "glibtop_call_l")]
		public static void* call_l (Glibtop.glibtop server, uint command, size_t send_size, void* send_buf, size_t recv_size, void* recv_buf);
		[CCode (cname = "glibtop_call_s")]
		public static void* call_s (Glibtop.glibtop server, uint command, size_t send_size, void* send_buf, size_t recv_size, void* recv_buf);
		[CCode (cname = "glibtop_close")]
		public static void close ();
		[CCode (cname = "glibtop_close_p")]
		public static void close_p (Glibtop.glibtop server);
		[CCode (cname = "glibtop_close_r")]
		public static void close_r (Glibtop.glibtop server);
		[CCode (cname = "glibtop_close_s")]
		public static void close_s (Glibtop.glibtop server);
		[CCode (cname = "glibtop_get_cpu")]
		public static void get_cpu (Glibtop.glibtop_cpu buf);
		[CCode (cname = "glibtop_get_cpu_l")]
		public static void get_cpu_l (Glibtop.glibtop server, Glibtop.glibtop_cpu buf);
		[CCode (cname = "glibtop_get_cpu_s")]
		public static void get_cpu_s (Glibtop.glibtop server, Glibtop.glibtop_cpu buf);
		[CCode (cname = "glibtop_get_fsusage")]
		public static void get_fsusage (Glibtop.glibtop_fsusage buf, string mount_dir);
		[CCode (cname = "glibtop_get_fsusage_l")]
		public static void get_fsusage_l (Glibtop.glibtop server, Glibtop.glibtop_fsusage buf, string mount_dir);
		[CCode (cname = "glibtop_get_fsusage_s")]
		public static void get_fsusage_s (Glibtop.glibtop server, Glibtop.glibtop_fsusage buf, string mount_dir);
		[CCode (cname = "glibtop_get_loadavg")]
		public static void get_loadavg (Glibtop.glibtop_loadavg buf);
		[CCode (cname = "glibtop_get_loadavg_l")]
		public static void get_loadavg_l (Glibtop.glibtop server, Glibtop.glibtop_loadavg buf);
		[CCode (cname = "glibtop_get_loadavg_s")]
		public static void get_loadavg_s (Glibtop.glibtop server, Glibtop.glibtop_loadavg buf);
		[CCode (cname = "glibtop_get_mem")]
		public static void get_mem (Glibtop.glibtop_mem buf);
		[CCode (cname = "glibtop_get_mem_l")]
		public static void get_mem_l (Glibtop.glibtop server, Glibtop.glibtop_mem buf);
		[CCode (cname = "glibtop_get_mem_s")]
		public static void get_mem_s (Glibtop.glibtop server, Glibtop.glibtop_mem buf);
		[CCode (cname = "glibtop_get_mountlist")]
		public static unowned Glibtop.glibtop_mountentry get_mountlist (Glibtop.glibtop_mountlist buf, int all_fs);
		[CCode (cname = "glibtop_get_mountlist_l")]
		public static unowned Glibtop.glibtop_mountentry get_mountlist_l (Glibtop.glibtop server, Glibtop.glibtop_mountlist buf, int all_fs);
		[CCode (cname = "glibtop_get_mountlist_s")]
		public static unowned Glibtop.glibtop_mountentry get_mountlist_s (Glibtop.glibtop server, Glibtop.glibtop_mountlist buf, int all_fs);
		[CCode (cname = "glibtop_get_msg_limits")]
		public static void get_msg_limits (Glibtop.glibtop_msg_limits buf);
		[CCode (cname = "glibtop_get_msg_limits_l")]
		public static void get_msg_limits_l (Glibtop.glibtop server, Glibtop.glibtop_msg_limits buf);
		[CCode (cname = "glibtop_get_msg_limits_s")]
		public static void get_msg_limits_s (Glibtop.glibtop server, Glibtop.glibtop_msg_limits buf);
		[CCode (cname = "glibtop_get_netlist")]
		public static unowned string get_netlist (Glibtop.glibtop_netlist buf);
		[CCode (cname = "glibtop_get_netlist_l")]
		public static unowned string get_netlist_l (Glibtop.glibtop server, Glibtop.glibtop_netlist buf);
		[CCode (cname = "glibtop_get_netlist_s")]
		public static unowned string get_netlist_s (Glibtop.glibtop server, Glibtop.glibtop_netlist buf);
		[CCode (cname = "glibtop_get_netload")]
		public static void get_netload (Glibtop.glibtop_netload buf, string @interface);
		[CCode (cname = "glibtop_get_netload_l")]
		public static void get_netload_l (Glibtop.glibtop server, Glibtop.glibtop_netload buf, string @interface);
		[CCode (cname = "glibtop_get_netload_s")]
		public static void get_netload_s (Glibtop.glibtop server, Glibtop.glibtop_netload buf, string @interface);
		[CCode (cname = "glibtop_get_parameter_l")]
		public static size_t get_parameter_l (Glibtop.glibtop server, uint parameter, void* data_ptr, size_t data_size);
		[CCode (cname = "glibtop_get_ppp")]
		public static void get_ppp (Glibtop.glibtop_ppp buf, uint device);
		[CCode (cname = "glibtop_get_ppp_l")]
		public static void get_ppp_l (Glibtop.glibtop server, Glibtop.glibtop_ppp buf, uint device);
		[CCode (cname = "glibtop_get_ppp_s")]
		public static void get_ppp_s (Glibtop.glibtop server, Glibtop.glibtop_ppp buf, uint device);
		[CCode (cname = "glibtop_get_proc_affinity")]
		public static uint16 get_proc_affinity (Glibtop.glibtop_proc_affinity buf, int pid);
		[CCode (cname = "glibtop_get_proc_affinity_l")]
		public static uint16 get_proc_affinity_l (Glibtop.glibtop server, Glibtop.glibtop_proc_affinity buf, int pid);
		[CCode (cname = "glibtop_get_proc_affinity_s")]
		public static uint16 get_proc_affinity_s (Glibtop.glibtop server, Glibtop.glibtop_proc_affinity buf, int pid);
		[CCode (cname = "glibtop_get_proc_args")]
		public static unowned string get_proc_args (Glibtop.glibtop_proc_args buf, int pid, uint max_len);
		[CCode (cname = "glibtop_get_proc_args_l")]
		public static unowned string get_proc_args_l (Glibtop.glibtop server, Glibtop.glibtop_proc_args buf, int pid, uint max_len);
		[CCode (cname = "glibtop_get_proc_args_s")]
		public static unowned string get_proc_args_s (Glibtop.glibtop server, Glibtop.glibtop_proc_args buf, int pid, uint max_len);
		[CCode (cname = "glibtop_get_proc_argv")]
		public static unowned string get_proc_argv (Glibtop.glibtop_proc_args buf, int pid, uint max_len);
		[CCode (cname = "glibtop_get_proc_argv_l")]
		public static unowned string get_proc_argv_l (Glibtop.glibtop server, Glibtop.glibtop_proc_args buf, int pid, uint max_len);
		[CCode (cname = "glibtop_get_proc_kernel")]
		public static void get_proc_kernel (Glibtop.glibtop_proc_kernel buf, int pid);
		[CCode (cname = "glibtop_get_proc_kernel_l")]
		public static void get_proc_kernel_l (Glibtop.glibtop server, Glibtop.glibtop_proc_kernel buf, int pid);
		[CCode (cname = "glibtop_get_proc_kernel_s")]
		public static void get_proc_kernel_s (Glibtop.glibtop server, Glibtop.glibtop_proc_kernel buf, int pid);
		[CCode (cname = "glibtop_get_proc_map")]
		public static unowned Glibtop.glibtop_map_entry get_proc_map (Glibtop.glibtop_proc_map buf, int pid);
		[CCode (cname = "glibtop_get_proc_map_l")]
		public static unowned Glibtop.glibtop_map_entry get_proc_map_l (Glibtop.glibtop server, Glibtop.glibtop_proc_map buf, int pid);
		[CCode (cname = "glibtop_get_proc_map_s")]
		public static unowned Glibtop.glibtop_map_entry get_proc_map_s (Glibtop.glibtop server, Glibtop.glibtop_proc_map buf, int pid);
		[CCode (cname = "glibtop_get_proc_mem")]
		public static void get_proc_mem (Glibtop.glibtop_proc_mem buf, int pid);
		[CCode (cname = "glibtop_get_proc_mem_l")]
		public static void get_proc_mem_l (Glibtop.glibtop server, Glibtop.glibtop_proc_mem buf, int pid);
		[CCode (cname = "glibtop_get_proc_mem_s")]
		public static void get_proc_mem_s (Glibtop.glibtop server, Glibtop.glibtop_proc_mem buf, int pid);
		[CCode (cname = "glibtop_get_proc_open_files")]
		public static unowned Glibtop.glibtop_open_files_entry get_proc_open_files (Glibtop.glibtop_proc_open_files buf, int pid);
		[CCode (cname = "glibtop_get_proc_open_files_l")]
		public static unowned Glibtop.glibtop_open_files_entry get_proc_open_files_l (Glibtop.glibtop server, Glibtop.glibtop_proc_open_files buf, int pid);
		[CCode (cname = "glibtop_get_proc_open_files_s")]
		public static unowned Glibtop.glibtop_open_files_entry get_proc_open_files_s (Glibtop.glibtop server, Glibtop.glibtop_proc_open_files buf, int pid);
		[CCode (cname = "glibtop_get_proc_segment")]
		public static void get_proc_segment (Glibtop.glibtop_proc_segment buf, int pid);
		[CCode (cname = "glibtop_get_proc_segment_l")]
		public static void get_proc_segment_l (Glibtop.glibtop server, Glibtop.glibtop_proc_segment buf, int pid);
		[CCode (cname = "glibtop_get_proc_segment_s")]
		public static void get_proc_segment_s (Glibtop.glibtop server, Glibtop.glibtop_proc_segment buf, int pid);
		[CCode (cname = "glibtop_get_proc_signal")]
		public static void get_proc_signal (Glibtop.glibtop_proc_signal buf, int pid);
		[CCode (cname = "glibtop_get_proc_signal_l")]
		public static void get_proc_signal_l (Glibtop.glibtop server, Glibtop.glibtop_proc_signal buf, int pid);
		[CCode (cname = "glibtop_get_proc_signal_s")]
		public static void get_proc_signal_s (Glibtop.glibtop server, Glibtop.glibtop_proc_signal buf, int pid);
		[CCode (cname = "glibtop_get_proc_state")]
		public static void get_proc_state (Glibtop.glibtop_proc_state buf, int pid);
		[CCode (cname = "glibtop_get_proc_state_l")]
		public static void get_proc_state_l (Glibtop.glibtop server, Glibtop.glibtop_proc_state buf, int pid);
		[CCode (cname = "glibtop_get_proc_state_s")]
		public static void get_proc_state_s (Glibtop.glibtop server, Glibtop.glibtop_proc_state buf, int pid);
		[CCode (cname = "glibtop_get_proc_time")]
		public static void get_proc_time (Glibtop.glibtop_proc_time buf, int pid);
		[CCode (cname = "glibtop_get_proc_time_l")]
		public static void get_proc_time_l (Glibtop.glibtop server, Glibtop.glibtop_proc_time buf, int pid);
		[CCode (cname = "glibtop_get_proc_time_s")]
		public static void get_proc_time_s (Glibtop.glibtop server, Glibtop.glibtop_proc_time buf, int pid);
		[CCode (cname = "glibtop_get_proc_uid")]
		public static void get_proc_uid (Glibtop.glibtop_proc_uid buf, int pid);
		[CCode (cname = "glibtop_get_proc_uid_l")]
		public static void get_proc_uid_l (Glibtop.glibtop server, Glibtop.glibtop_proc_uid buf, int pid);
		[CCode (cname = "glibtop_get_proc_uid_s")]
		public static void get_proc_uid_s (Glibtop.glibtop server, Glibtop.glibtop_proc_uid buf, int pid);
		[CCode (cname = "glibtop_get_proc_wd")]
		public static unowned string get_proc_wd (Glibtop.glibtop_proc_wd buf, int pid);
		[CCode (cname = "glibtop_get_proc_wd_l")]
		public static unowned string get_proc_wd_l (Glibtop.glibtop server, Glibtop.glibtop_proc_wd buf, int pid);
		[CCode (cname = "glibtop_get_proc_wd_s")]
		public static unowned string get_proc_wd_s (Glibtop.glibtop server, Glibtop.glibtop_proc_wd buf, int pid);
		[CCode (cname = "glibtop_get_proclist")]
		public static int get_proclist (Glibtop.glibtop_proclist buf, int64 which, int64 arg);
		[CCode (cname = "glibtop_get_proclist_l")]
		public static int get_proclist_l (Glibtop.glibtop server, Glibtop.glibtop_proclist buf, int64 which, int64 arg);
		[CCode (cname = "glibtop_get_proclist_s")]
		public static int get_proclist_s (Glibtop.glibtop server, Glibtop.glibtop_proclist buf, int64 which, int64 arg);
		[CCode (cname = "glibtop_get_sem_limits")]
		public static void get_sem_limits (Glibtop.glibtop_sem_limits buf);
		[CCode (cname = "glibtop_get_sem_limits_l")]
		public static void get_sem_limits_l (Glibtop.glibtop server, Glibtop.glibtop_sem_limits buf);
		[CCode (cname = "glibtop_get_sem_limits_s")]
		public static void get_sem_limits_s (Glibtop.glibtop server, Glibtop.glibtop_sem_limits buf);
		[CCode (cname = "glibtop_get_shm_limits")]
		public static void get_shm_limits (Glibtop.glibtop_shm_limits buf);
		[CCode (cname = "glibtop_get_shm_limits_l")]
		public static void get_shm_limits_l (Glibtop.glibtop server, Glibtop.glibtop_shm_limits buf);
		[CCode (cname = "glibtop_get_shm_limits_s")]
		public static void get_shm_limits_s (Glibtop.glibtop server, Glibtop.glibtop_shm_limits buf);
		[CCode (cname = "glibtop_get_swap")]
		public static void get_swap (Glibtop.glibtop_swap buf);
		[CCode (cname = "glibtop_get_swap_l")]
		public static void get_swap_l (Glibtop.glibtop server, Glibtop.glibtop_swap buf);
		[CCode (cname = "glibtop_get_swap_s")]
		public static void get_swap_s (Glibtop.glibtop server, Glibtop.glibtop_swap buf);
		[CCode (cname = "glibtop_get_sysdeps")]
		public static void get_sysdeps (Glibtop.glibtop_sysdeps buf);
		[CCode (cname = "glibtop_get_sysdeps_r")]
		public static void get_sysdeps_r (Glibtop.glibtop server, Glibtop.glibtop_sysdeps buf);
		[CCode (cname = "glibtop_get_sysinfo")]
		public static unowned Glibtop.glibtop_sysinfo get_sysinfo ();
		[CCode (cname = "glibtop_get_sysinfo_s")]
		public static unowned Glibtop.glibtop_sysinfo get_sysinfo_s (Glibtop.glibtop server);
		[CCode (cname = "glibtop_get_uptime")]
		public static void get_uptime (Glibtop.glibtop_uptime buf);
		[CCode (cname = "glibtop_get_uptime_l")]
		public static void get_uptime_l (Glibtop.glibtop server, Glibtop.glibtop_uptime buf);
		[CCode (cname = "glibtop_get_uptime_s")]
		public static void get_uptime_s (Glibtop.glibtop server, Glibtop.glibtop_uptime buf);
		[CCode (cname = "glibtop_init")]
		public static unowned Glibtop.glibtop init ();
		[CCode (cname = "glibtop_init_p")]
		public static void init_p (Glibtop.glibtop server, uint features, uint flags);
		[CCode (cname = "glibtop_init_r")]
		public static unowned Glibtop.glibtop init_r (out unowned Glibtop.glibtop server_ptr, uint features, uint flags);
		[CCode (cname = "glibtop_init_s")]
		public static unowned Glibtop.glibtop init_s (out unowned Glibtop.glibtop server_ptr, uint features, uint flags);
		[CCode (cname = "glibtop_internet_addr")]
		public static long internet_addr (string host);
		[CCode (cname = "glibtop_make_connection")]
		public static int make_connection (string hostarg, int portarg, int s);
		[CCode (cname = "glibtop_open_l")]
		public static void open_l (Glibtop.glibtop server, string program_name, uint features, uint flags);
		[CCode (cname = "glibtop_open_p")]
		public static void open_p (Glibtop.glibtop server, string program_name, uint features, uint flags);
		[CCode (cname = "glibtop_open_s")]
		public static void open_s (Glibtop.glibtop server, string program_name, uint features, uint flags);
		[CCode (cname = "glibtop_set_parameter_l")]
		public static void set_parameter_l (Glibtop.glibtop server, uint parameter, void* data_ptr, size_t data_size);
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_command {
		public uint64 command;
		public uint64 data_size;
		[CCode (array_length = false)]
		public weak string[] parameter;
		public uint64 size;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_cpu {
		public uint64 flags;
		public uint64 frequency;
		public uint64 idle;
		public uint64 iowait;
		public uint64 irq;
		public uint64 nice;
		public uint64 softirq;
		public uint64 sys;
		public uint64 total;
		public uint64 user;
		public uint64 xcpu_flags;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_idle;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_iowait;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_irq;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_nice;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_softirq;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_sys;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_total;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_user;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_entry {
		public weak GLib.HashTable descriptions;
		public weak GLib.PtrArray labels;
		public weak GLib.HashTable values;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_fsusage {
		public uint64 bavail;
		public uint64 bfree;
		public uint32 block_size;
		public uint64 blocks;
		public uint64 ffree;
		public uint64 files;
		public uint64 flags;
		public uint64 read;
		public uint64 write;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_loadavg {
		public uint64 flags;
		public uint64 last_pid;
		[CCode (array_length = false)]
		public weak double[] loadavg;
		public uint64 nr_running;
		public uint64 nr_tasks;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_machine {
		public int fd_loadavg;
		public int fd_meminfo;
		public int fd_stat;
		public int last_pid;
		public int no_update;
		[CCode (array_length = false)]
		public weak string[] proc_stat;
		[CCode (array_length = false)]
		public weak string[] proc_statm;
		[CCode (array_length = false)]
		public weak string[] proc_status;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_map_entry {
		public uint64 device;
		public uint64 end;
		[CCode (array_length = false)]
		public weak string[] filename;
		public uint64 flags;
		public uint64 inode;
		public uint64 offset;
		public uint64 perm;
		public uint64 private_clean;
		public uint64 private_dirty;
		public uint64 rss;
		public uint64 shared_clean;
		public uint64 shared_dirty;
		public uint64 size;
		public uint64 start;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_mem {
		public uint64 buffer;
		public uint64 cached;
		public uint64 flags;
		public uint64 free;
		public uint64 locked;
		public uint64 shared;
		public uint64 total;
		public uint64 used;
		public uint64 user;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_mountentry {
		public uint64 dev;
		[CCode (array_length = false)]
		public weak string[] devname;
		[CCode (array_length = false)]
		public weak string[] mountdir;
		[CCode (array_length = false)]
		public weak string[] type;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_mountlist {
		public uint64 flags;
		public uint64 number;
		public uint64 size;
		public uint64 total;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_msg_limits {
		public uint64 flags;
		public uint64 msgmap;
		public uint64 msgmax;
		public uint64 msgmnb;
		public uint64 msgmni;
		public uint64 msgpool;
		public uint64 msgssz;
		public uint64 msgtql;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_netlist {
		public uint64 flags;
		public uint32 number;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_netload {
		public uint32 address;
		[CCode (array_length = false)]
		public weak uchar[] address6;
		public uint64 bytes_in;
		public uint64 bytes_out;
		public uint64 bytes_total;
		public uint64 collisions;
		public uint64 errors_in;
		public uint64 errors_out;
		public uint64 errors_total;
		public uint64 flags;
		[CCode (array_length = false)]
		public weak uchar[] hwaddress;
		public uint64 if_flags;
		public uint32 mtu;
		public uint64 packets_in;
		public uint64 packets_out;
		public uint64 packets_total;
		[CCode (array_length = false)]
		public weak uchar[] prefix6;
		public uchar scope6;
		public uint32 subnet;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_open_files_entry {
		public int fd;
		public void* info;
		public uint16 type;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_ppp {
		public uint64 bytes_in;
		public uint64 bytes_out;
		public uint64 flags;
		public uint64 state;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_affinity {
		public bool all;
		public uint64 flags;
		public uint32 number;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_args {
		public uint64 flags;
		public uint64 size;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_kernel {
		public uint64 cmaj_flt;
		public uint64 cmin_flt;
		public uint64 flags;
		public uint64 k_flags;
		public uint64 kstk_eip;
		public uint64 kstk_esp;
		public uint64 maj_flt;
		public uint64 min_flt;
		public uint64 nwchan;
		[CCode (array_length = false)]
		public weak string[] wchan;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_map {
		public uint64 flags;
		public uint64 number;
		public uint64 size;
		public uint64 total;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_mem {
		public uint64 flags;
		public uint64 resident;
		public uint64 rss;
		public uint64 rss_rlim;
		public uint64 share;
		public uint64 size;
		public uint64 vsize;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_open_files {
		public uint64 flags;
		public uint64 number;
		public uint64 size;
		public uint64 total;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_segment {
		public uint64 data_rss;
		public uint64 dirty_size;
		public uint64 end_code;
		public uint64 flags;
		public uint64 shlib_rss;
		public uint64 stack_rss;
		public uint64 start_code;
		public uint64 start_stack;
		public uint64 text_rss;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_signal {
		[CCode (array_length = false)]
		public weak uint64[] blocked;
		public uint64 flags;
		[CCode (array_length = false)]
		public weak uint64[] sigcatch;
		[CCode (array_length = false)]
		public weak uint64[] sigignore;
		[CCode (array_length = false)]
		public weak uint64[] @signal;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_state {
		[CCode (array_length = false)]
		public weak string[] cmd;
		public uint64 flags;
		public int gid;
		public int has_cpu;
		public int last_processor;
		public int processor;
		public int rgid;
		public int ruid;
		public uint state;
		public int uid;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_time {
		public uint64 cstime;
		public uint64 cutime;
		public uint64 flags;
		public uint64 frequency;
		public uint64 it_real_value;
		public uint64 rtime;
		public uint64 start_time;
		public uint64 stime;
		public uint64 timeout;
		public uint64 utime;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_stime;
		[CCode (array_length = false)]
		public weak uint64[] xcpu_utime;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_uid {
		public int32 egid;
		public int32 euid;
		public uint64 flags;
		public int32 fsgid;
		public int32 fsuid;
		public int32 gid;
		[CCode (array_length = false)]
		public weak int32[] groups;
		public int32 ngroups;
		public int32 nice;
		public int32 pgrp;
		public int32 pid;
		public int32 ppid;
		public int32 priority;
		public int32 session;
		public int32 sgid;
		public int32 suid;
		public int32 tpgid;
		public int32 tty;
		public int32 uid;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proc_wd {
		[CCode (array_length = false)]
		public weak string[] exe;
		public uint64 flags;
		public uint32 number;
		[CCode (array_length = false)]
		public weak string[] root;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_proclist {
		public uint64 flags;
		public uint64 number;
		public uint64 size;
		public uint64 total;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_response {
		public uint64 data_size;
		public int64 offset;
		public uint64 size;
		public weak Glibtop.glibtop_response_union u;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_response_union {
		public weak Glibtop.glibtop_union data;
		public weak Glibtop.glibtop_sysdeps sysdeps;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_sem_limits {
		public uint64 flags;
		public uint64 semaem;
		public uint64 semmap;
		public uint64 semmni;
		public uint64 semmns;
		public uint64 semmnu;
		public uint64 semmsl;
		public uint64 semopm;
		public uint64 semume;
		public uint64 semusz;
		public uint64 semvmx;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_shm_limits {
		public uint64 flags;
		public uint64 shmall;
		public uint64 shmmax;
		public uint64 shmmin;
		public uint64 shmmni;
		public uint64 shmseg;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_signame {
		public weak string label;
		public weak string name;
		public int number;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_swap {
		public uint64 flags;
		public uint64 free;
		public uint64 pagein;
		public uint64 pageout;
		public uint64 total;
		public uint64 used;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_sysdeps {
		public uint64 cpu;
		public uint64 features;
		public uint64 flags;
		public uint64 fsusage;
		public uint64 loadavg;
		public uint64 mem;
		public uint64 mountlist;
		public uint64 msg_limits;
		public uint64 netlist;
		public uint64 netload;
		public uint64 ppp;
		public uint64 proc_affinity;
		public uint64 proc_args;
		public uint64 proc_kernel;
		public uint64 proc_map;
		public uint64 proc_mem;
		public uint64 proc_open_files;
		public uint64 proc_segment;
		public uint64 proc_signal;
		public uint64 proc_state;
		public uint64 proc_time;
		public uint64 proc_uid;
		public uint64 proc_wd;
		public uint64 proclist;
		public uint64 sem_limits;
		public uint64 shm_limits;
		public uint64 swap;
		public uint64 uptime;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_sysinfo {
		[CCode (array_length = false)]
		public weak Glibtop.glibtop_entry[] cpuinfo;
		public uint64 flags;
		public uint64 ncpu;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_union {
		public weak Glibtop.glibtop_cpu cpu;
		public weak Glibtop.glibtop_fsusage fsusage;
		public weak Glibtop.glibtop_loadavg loadavg;
		public weak Glibtop.glibtop_mem mem;
		public weak Glibtop.glibtop_mountlist mountlist;
		public weak Glibtop.glibtop_msg_limits msg_limits;
		public weak Glibtop.glibtop_netlist netlist;
		public weak Glibtop.glibtop_netload netload;
		public weak Glibtop.glibtop_ppp ppp;
		public weak Glibtop.glibtop_proc_affinity proc_affinity;
		public weak Glibtop.glibtop_proc_args proc_args;
		public weak Glibtop.glibtop_proc_kernel proc_kernel;
		public weak Glibtop.glibtop_proc_map proc_map;
		public weak Glibtop.glibtop_proc_mem proc_mem;
		public weak Glibtop.glibtop_proc_open_files proc_open_files;
		public weak Glibtop.glibtop_proc_segment proc_segment;
		public weak Glibtop.glibtop_proc_signal proc_signal;
		public weak Glibtop.glibtop_proc_state proc_state;
		public weak Glibtop.glibtop_proc_time proc_time;
		public weak Glibtop.glibtop_proc_uid proc_uid;
		public weak Glibtop.glibtop_proc_wd proc_wd;
		public weak Glibtop.glibtop_proclist proclist;
		public weak Glibtop.glibtop_sem_limits sem_limits;
		public weak Glibtop.glibtop_shm_limits shm_limits;
		public weak Glibtop.glibtop_swap swap;
		public weak Glibtop.glibtop_uptime uptime;
	}
	[Compact]
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public class glibtop_uptime {
		public uint64 boot_time;
		public uint64 flags;
		public double idletime;
		public double uptime;
	}
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int AUTH_NAMESZ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int AUTH_TIMEOUT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_CPU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_FSUSAGE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_LOADAVG;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_MOUNTLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_MSG_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_NETLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_NETLOAD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PPP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROCLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_AFFINITY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_ARGS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_KERNEL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_MAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_OPEN_FILES;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_SEGMENT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_SIGNAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_STATE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_TIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_UID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_PROC_WD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_QUIT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_SEM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_SHM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_SWAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_SYSDEPS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CMND_UPTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CONN_INTERNET;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CONN_IPC;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CONN_UNIX;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_FREQUENCY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_IDLE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_IOWAIT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_IRQ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_NICE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_SOFTIRQ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_SYS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int CPU_USER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int DEFAULT_PORT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const string DEFAUTH_NAME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const string EOT_STR;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int ERROR_METHOD_ABORT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int ERROR_METHOD_IGNORE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int ERROR_METHOD_WARN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int ERROR_METHOD_WARN_ONCE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int EXCLUDE_IDLE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int EXCLUDE_NOTTY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int EXCLUDE_SYSTEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FALSE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FEATURES_EXCEPT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FEATURES_NO_SERVER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FILE_ENTRY_FD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FILE_ENTRY_INETSOCKET_DST_HOST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FILE_ENTRY_INETSOCKET_DST_PORT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FILE_ENTRY_NAME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FILE_ENTRY_TYPE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_BAVAIL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_BFREE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_BLOCKS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_BLOCK_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_FFREE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_FILES;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_READ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int FSUSAGE_WRITE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int HOSTNAMSZ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int INIT_NO_INIT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int INIT_NO_OPEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_MSGMAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_MSGMAX;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_MSGMNB;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_MSGMNI;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_MSGPOOL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_MSGSSZ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_MSGTQL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMAEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMMAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMMNI;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMMNS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMMNU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMMSL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMOPM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMUME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMUSZ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SEMVMX;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SHMALL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SHMMAX;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SHMMIN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SHMMNI;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int IPC_SHMSEG;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_ALL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_MASK;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_PGRP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_PID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_RUID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_SESSION;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_TTY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int KERN_PROC_UID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const string LIBGTOP_VERSION_STRING;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int LOADAVG_LAST_PID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int LOADAVG_LOADAVG;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int LOADAVG_NR_RUNNING;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int LOADAVG_NR_TASKS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_DEVICE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_END;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_FILENAME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_INODE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_OFFSET;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_PERM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_PRIVATE_CLEAN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_PRIVATE_DIRTY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_RSS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_SHARED_CLEAN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_SHARED_DIRTY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_ENTRY_START;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_FILENAME_LEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_PERM_EXECUTE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_PERM_PRIVATE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_PERM_READ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_PERM_SHARED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAP_PERM_WRITE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_CMND;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_CPU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_FSUSAGE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_GROUPS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_LOADAVG;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_MAP_ENTRY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_MOUNTLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_MSG_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_NETLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_NETLOAD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_OPEN_FILE_ENTRY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PPP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROCLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_ARGS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_KERNEL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_MAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_OPEN_FILES;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_SEGMENT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_SIGNAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_STATE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_TIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_PROC_UID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_SEM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_SHM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_SWAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_SYSDEPS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_SYSINFO;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MAX_UPTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const string MCOOKIE_NAME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const string MCOOKIE_SCREEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const string MCOOKIE_X_NAME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_BUFFER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_CACHED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_FREE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_LOCKED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_SHARED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_USED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MEM_USER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int METHOD_DIRECT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int METHOD_INET;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int METHOD_PIPE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int METHOD_UNIX;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MOUNTENTRY_LEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MOUNTLIST_NUMBER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MOUNTLIST_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int MOUNTLIST_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NCPU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLIST_NUMBER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_ADDRESS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_ADDRESS6;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_BYTES_IN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_BYTES_OUT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_BYTES_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_COLLISIONS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_ERRORS_IN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_ERRORS_OUT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_ERRORS_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_HWADDRESS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_IF_FLAGS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_MTU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_PACKETS_IN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_PACKETS_OUT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_PACKETS_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_PREFIX6;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_SCOPE6;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int NETLOAD_SUBNET;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int OPEN_DEST_HOST_LEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int OPEN_FILENAME_LEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PARAM_COMMAND;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PARAM_ERROR_METHOD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PARAM_FEATURES;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PARAM_HOST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PARAM_METHOD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PARAM_PORT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PARAM_REQUIRED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PATCHLEVEL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PPP_BYTES_IN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PPP_BYTES_OUT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PPP_STATE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCESS_DEAD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCESS_INTERRUPTIBLE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCESS_RUNNING;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCESS_STOPPED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCESS_SWAPPING;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCESS_UNINTERRUPTIBLE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCESS_ZOMBIE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCLIST_NUMBER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCLIST_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROCLIST_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_AFFINITY_ALL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_AFFINITY_NUMBER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_ARGS_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_CMAJ_FLT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_CMIN_FLT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_KSTK_EIP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_KSTK_ESP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_K_FLAGS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_MAJ_FLT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_MIN_FLT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_NWCHAN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_KERNEL_WCHAN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MAP_NUMBER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MAP_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MAP_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MEM_RESIDENT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MEM_RSS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MEM_RSS_RLIM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MEM_SHARE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MEM_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_MEM_VSIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_OPEN_FILES_NUMBER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_OPEN_FILES_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_OPEN_FILES_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_DATA_RSS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_DIRTY_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_END_CODE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_SHLIB_RSS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_STACK_RSS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_START_CODE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_START_STACK;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SEGMENT_TEXT_RSS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SIGNAL_BLOCKED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SIGNAL_SIGCATCH;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SIGNAL_SIGIGNORE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_SIGNAL_SIGNAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_CMD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_GID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_HAS_CPU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_LAST_PROCESSOR;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_PROCESSOR;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_RGID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_RUID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_STATE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_STATE_UID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_CSTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_CUTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_FREQUENCY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_IT_REAL_VALUE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_RTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_START_TIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_STIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_TIMEOUT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_UTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_XCPU_STIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_TIME_XCPU_UTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_EGID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_EUID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_FSGID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_FSUID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_GID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_GROUPS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_NGROUPS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_NICE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_PGRP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_PID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_PPID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_PRIORITY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_SESSION;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_SGID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_SUID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_TPGID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_TTY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_UID_UID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_WD_EXE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_WD_EXE_LEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_WD_MAX;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_WD_NUMBER;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_WD_ROOT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int PROC_WD_ROOT_LEN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int REPLYSIZ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_CPU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_LOADAVG;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_MSG_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_NETLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_NETLOAD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PPP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROCLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_AFFINITY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_ARGS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_FILE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_KERNEL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_MAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_SEGMENT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_SIGNAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_STATE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_TIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_UID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_PROC_WD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_SEM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_SHM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_SWAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SUID_UPTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SWAP_FREE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SWAP_PAGEIN;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SWAP_PAGEOUT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SWAP_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SWAP_USED;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_ALL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_CPU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_FEATURES;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_FSUSAGE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_LOADAVG;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_MOUNTLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_MSG_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_NETLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_NETLOAD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PPP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROCLIST;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_AFFINITY;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_ARGS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_KERNEL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_MAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_MEM;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_OPEN_FILES;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_SEGMENT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_SIGNAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_STATE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_TIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_UID;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_PROC_WD;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_SEM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_SHM_LIMITS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_SWAP;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSDEPS_UPTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSINFO_CPUINFO;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int SYSINFO_NCPU;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int TABLE_SIZE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int TRUE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int UPTIME_BOOT_TIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int UPTIME_IDLETIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int UPTIME_UPTIME;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_FLAGS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_IDLE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_IOWAIT;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_IRQ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_NICE;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_SOFTIRQ;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_SYS;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_TOTAL;
	[CCode (cheader_filename = "libgtop-2.0/glibtop.h")]
	public const int XCPU_USER;
}
