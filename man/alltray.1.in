.TH alltray 1 "January 17, 2008" "Version @PACKAGE_VERSION@" "User Commands"
.ds UX U\s-3NIX\s+3
\#
.SH NAME
\#
alltray \(en Dock any program into the system tray
\#
.SH SYNOPSIS
\#
.B alltray
[OPTION...] [\-\-]
.I [program] [args]
\#
.SH DESCRIPTION
\#
Start
.I program
with optional arguments provided in
.I args
and dock it to the system tray.  If
.I args
contains options which start with dashes (\- or \-\-) then the special
\(lqend of options\(rq argument (\-\-) must be given before
.I program
on the command line.  See \fBEXAMPLES\fR below for examples on invoking
AllTray.

AllTray only works on \*(UX and \*(UX-like operating systems with the X11
Window System and compliant window management and system tray management
software running.

AllTray has two modes: regular and \(lqclick mode\(rq.  To use click mode,
simply do not specify a
.I
program
on the command line; AllTray will then let you click on an
already-existing window and dock it instead of the windows which belong
to a new process.
\#
.SH OPTIONS
\#
.IP "\-?, \-\-help"
Show the help (usage) screen.
.IP "\-s, \-\-show"
Show the window(s) initially.  The default behavior is to dock the
application to the system tray as soon as it opens.
.I This behavior may change in the future.
.IP "\-S, \-\-sticky"
Make managed windows \(lqsticky\(rq.  That is, the windows will appear on
all desktops, not just one.
.IP "\-h, \-\-hide\-from\-taskbar"
Hide the application's window(s) from the system task bar.
.IP "\-d \fIsec\fR, \-\-display\-title\-change=\fIsec\fR"
Show window name (title) changes for \fIsec\fR seconds after they
happen.  This notification will appear as an alert bubble that will
display near the docked application's icon in the system tray.
.IP "\-m, \-\-modify\-title"
Append \(lq(AllTray)\(rq to the title of windows which are controlled by
AllTray.  This may make the window easier to identify, but it can also
be annoying.
.I Prior to AllTray 0.70, this feature was enabled by default.
.IP "\-q, \-\-quiet"
Do not emit verbose messages or display the program's startup banner
even if AllTray is being run on a terminal.  By default, if AllTray is
running on a terminal, a startup banner will display which announces the
version, copyright, and license of the program (as with \-\-version, but
the program continues instead of halting after displaying this
information).
.IP "\-L, \-\-list\-debug\-opts"
Lists the debug \(lqflags\(rq that AllTray supports.  The items in this list
are allowed values in an environment variable named \fBALLTRAY_DEBUG\fR;
see the \fBENVIRONMENT VARIABLES\fR section for more information.
.IP "\-D, \-\-debug"
Enable the debug message printing mechanism of AllTray.  Note that this
requires also setting the environment variable \fBALLTRAY_DEBUG\fR, to
get any debug output; see the \fBENVIRONMENT VARIABLES\fR section below.
.IP "\-v, \-\-version"
Show the program version, copyright, and license.
.IP "\-V, \-\-extended-version"
Show the program version, copyright, license, and build information.
.IP "\-\-display=\fIdisp\fR"
Use the X11 display specified by \fIdisp\fR.  The default is to use the
X11 display referenced by the \fBDISPLAY\fR environment variable.
.IP "\-\-wait-for-wm"
Wait for an EWMH-compliant window manager to load.  This is useful if
you are starting AllTray in a \fI.xinitrc\fR file, or as an
\(lqautostart\(rq program via your session manager.  By default, AllTray
does not wait for a window manager to become available.
.IP "\-\-wait-for-systray"
Wait for a System Tray Specification-compliant program to load.  This is
useful if you are starting AllTray in a \fI.xinitrc\fR file, or as an
\(lqautostart\(rq program via your session manager.  By default, AllTray
does not wait for a system tray to become available.
\#
.SH ENVIRONMENT VARIABLES
\#
.IP "ALLTRAY_OPTIONS"
AllTray reads this environment variable for any default options.  Any of
the options above in \fBOPTIONS\fR can be specified in this environment
variable.  This environment variable is looked at \fIbefore\fR the
command line, so the command line will override it should there be any
conflict.
.IP "ALLTRAY_DEBUG"
When the \-d or \-\-debug options are specified on the command line,
AllTray looks at this environment variable to see which types of debug
messages you are interested in seeing.  For example, setting this
variable to \(lqCMDLINE X11\(rq and enabling debugging will tell AllTray to
display messages pertaining to command-line parsing and communication
with the X Window System.

For a list of valid tokens, run \(lqalltray -L\(rq which will output the
list of supported debugging messages.  Also, you can specify \fBALL\fR
to enable every type of debugging message that AllTray supports.
.IP "DISPLAY"
AllTray reads this environment variable to determine how to find and
connect to your instance of the X Window System.  Using the \-\-display
command line option can override it, or provide it if unset.
\#
.SH EXAMPLES
\#
Here are some examples of invoking AllTray in various situations:
.IP "Simple example"
alltray evolution
\#
.IP "Simple debugging example"
ALLTRAY_DEBUG="X11 TRAY" alltray \-D evolution
\#
.IP "Client command line arguments example"
alltray \-\- xterm \-geometry 132x40
\#
.IP "Autostart example"
alltray \-\-wait\-for\-wm \-\-wait\-for\-systray evolution
\#
.SH DIAGNOSTICS
\#
The exit code can be tested for success or failure.  If AllTray exits
with status zero, it was able to spawn the requested program (or it was
able to attach to the requested window, for click mode) and ran until
the program exited or AllTray was instructed to undock the application.

In certain events, AllTray will return an error message (displayed on
stderr) which provides information as to why it failed to work.  Some of
these messages (and explanations for them) include:
.RS 0.5i
.P
\fIError: Unable to initialize the window manager module.  Are you
running an EWMH-compliant window manager?\fR
.RS 0.2i
.P
This means that there was no EWMH-compliant window manager running.
Known EWMH-compliant window managers include Metacity, KWin, Compiz, and
Fluxbox.
.RE
.P
\fIError: Unable to initialize the system tray module.  Are you running
a system tray manager?\fR
.RS 0.2i
.P
This means that AllTray found an EWMH-compliant window manager, but it
did not find a system tray manager so that it could dock software.
There are a number of these, and in GNOME, KDE, and Fluxbox (at least),
a system tray manager is included with the system and available by
default.
.RE
.RE

Any non-zero exit value indicates a failure of some sort.  See
\fBalltray.h\fR for error exit codes.
\#
.SH REQUIREMENTS
\#
AllTray requires a window manager which implements the EWMH
specification (and thus by definition the ICCCM specification).  It also
requires another process which fills the role of the system tray, as
specified in the System Tray Specification.
\#
.SH BUGS
\#
Interaction with compiz is a bit iffy\(emclick mode in particular is
troublesome with the compiz window manager.

Some applications\(emin particular, GNU Emacs\(emdo not always properly
dock.

Session management support needs to be implemented.  If you rely on
session management support for your application software, you may
encounter surprising results when combining that software with AllTray
at present.

The error exit codes from AllTray need to be documented here.

There are likely many more.  If you should find one, please report it at
https://launchpad.net/alltray/+filebug.
\#
.SH REPORTING BUGS
\#
When reporting a bug, please submit all of the following information (or
as much of it as is possible):
.IP "\fIAllTray version\fR"
You can get this from running \(lqalltray \-V\(rq
\#
.IP "\fICore file\fR"
If the bug you are trying to report resulted in AllTray crashing
(meaning it caught a signal like SIGSEGV or SIGABRT, or otherwise
unexpectedly died), submit the core file.  Many distributions today will
suppress the generation of core files; you may have to run \(lqulimit -c
unlimited\(rq in a shell, and then run AllTray from that shell, to get a
core file.
\#
.IP "\fISystem software versions\fR"
Include the name and version of your window manager; desktop environment
software (or whatever software provides your system tray\(emsome window
managers perform this task); and your operating system kernel, version,
and architecture (run \(lquname -a\(rq to get that).
\#
.IP "\fIHow to reproduce\fR"
Write in as much detail as you can how to reproduce the bug.  Try not to
leave anything out, even it if seems stupid and self-evident.  It is
especially important that you also indicate the name and version number
of the software that you were trying to use with AllTray, \fIeven if it
is not generally available\fR, since it is sometimes possible that the
program may be the cause of the issue.  However, \fBif the program is
not generally available, it will be up to you (or someone else who has
access to the same software) to identify the cause of the problem\fR so
that it can be either reported to the program's vendor or the bug
pinpointed and fixed in AllTray.
\#
.SH AUTHORS
\#
AllTray was started in 2004 by Jochen Baier <email@jochen-baier.de>.  It
is currently being written and maintained by Michael B. Trausch
<mike@trausch.us>.
\#
.SH COPYRIGHT
\#
Copyright \(co 2004\(en2007 Jochen Baier <email@jochen-baier.de>
.br
Copyright \(co 2009 Michael B. Trausch <mike@trausch.us>

AllTray is licensed under the terms of the GNU GPL Version 3 license.
For the full-text of the license, see the license as published on the
GNU web site.

The license should also be available on your computer.  In the source
distribution for AllTray, it is the file \(lqCOPYING\(rq.
\#
.SH LINKS
\#
The GNU GPL Version 3.0 is available on the Internet at
http://www.gnu.org/licenses/gpl-3.0.html

The ICCCM is available on the Internet at
http://tronche.com/gui/x/icccm/

The EWMH is available on the Internet at
http://standards.freedesktop.org/wm-spec/wm-spec-latest.html

The System Tray Specification is available on the Internet at
http://standards.freedesktop.org/systemtray-spec/systemtray-spec-latest.html
